        -:    0:Source:tobetest.c
        -:    0:Graph:unittest.gcno
        -:    0:Data:unittest.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:
function _Z8Triangleiii called 21 returned 100% blocks executed 100%
       21:    3:const char* Triangle(int a, int b, int c) {
        -:    4:    
       21:    5:    if(a <= 0 || b <= 0 || c<= 0)
branch  0 taken 86% (fallthrough)
branch  1 taken 14%
branch  2 taken 89% (fallthrough)
branch  3 taken 11%
branch  4 taken 6% (fallthrough)
branch  5 taken 94%
        6:    6:        return "Invalid input";
        -:    7:
       15:    8:    if ((a < b + c && b < a + c && c < a + b) == 0) 
branch  0 taken 87% (fallthrough)
branch  1 taken 13%
branch  2 taken 92% (fallthrough)
branch  3 taken 8%
branch  4 taken 8% (fallthrough)
branch  5 taken 92%
        4:    9:        return "NotATriangle";
        -:   10:
       11:   11:    if(a == b && b == c)
branch  0 taken 36% (fallthrough)
branch  1 taken 64%
branch  2 taken 50% (fallthrough)
branch  3 taken 50%
        2:   12:        return "Equilateral";
        -:   13:
        9:   14:    if(a == b || b ==c || c == a)
branch  0 taken 78% (fallthrough)
branch  1 taken 22%
branch  2 taken 86% (fallthrough)
branch  3 taken 14%
branch  4 taken 17% (fallthrough)
branch  5 taken 83%
        4:   15:        return "Isosceles";
        -:   16:
        5:   17:    if(a*a == b*b + c*c || b*b == a*a + c*c || c*c == a*a + b*b)
branch  0 taken 80% (fallthrough)
branch  1 taken 20%
branch  2 taken 75% (fallthrough)
branch  3 taken 25%
branch  4 taken 67% (fallthrough)
branch  5 taken 33%
        4:   18:        return "Scalene";
        -:   19:
        1:   20:    return "Right triangle";
        -:   21:}
        -:   22:
        -:   23:
function _Z7NextDayiii called 17 returned 100% blocks executed 82%
       17:   24:const char* NextDay(int year, int month, int day) {
       17:   25:    int tomoYear = year;
       17:   26:    int tomoMonth = month;
        -:   27:    int tomoDay;
       17:   28:    int isLeapYear = ((year%4 == 0) && (year%100 != 0)) || (year%400 == 0);
branch  0 taken 18% (fallthrough)
branch  1 taken 82%
branch  2 taken 67% (fallthrough)
branch  3 taken 33%
branch  4 taken 6% (fallthrough)
branch  5 taken 94%
       17:   29:    if ( year < 0 ) return "Invalid input";
branch  0 taken 29% (fallthrough)
branch  1 taken 71%
       12:   30:    if ( month < 1 || month > 12) return "Invalid input";
branch  0 taken 83% (fallthrough)
branch  1 taken 17%
branch  2 taken 20% (fallthrough)
branch  3 taken 80%
        8:   31:    if ( day < 1 || day >31) return "Invalid input";
branch  0 taken 88% (fallthrough)
branch  1 taken 13%
branch  2 taken 14% (fallthrough)
branch  3 taken 86%
        6:   32:    switch (month) {
branch  0 taken 17%
branch  1 taken 17%
branch  2 taken 17%
branch  3 taken 50%
branch  4 taken 0%
        -:   33:        case 1: case 3: case 5: case 7: case 8: case 10:
        1:   34:            if (day < 31)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   35:                tomoDay = day + 1;
        -:   36:            else {
        1:   37:                tomoDay = 1;
        1:   38:                tomoMonth = month + 1;
        1:   39:            } break;
        -:   40:        case 4: case 6: case 9: case 11:
        1:   41:            if (day < 30)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   42:                tomoDay = day + 1;
        -:   43:            else {
        1:   44:                tomoDay = 1;
        1:   45:                tomoMonth = month +1;
        1:   46:            } break;
        -:   47:        case 12:
        1:   48:            if (day < 31)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   49:                tomoDay = day + 1;
        -:   50:            else{
        1:   51:                tomoDay = 1;
        1:   52:                tomoMonth = 1;
        1:   53:                tomoYear = year + 1;
        1:   54:            } break;
        -:   55:        case 2:
        3:   56:            if (day < 28)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   57:                tomoDay = day + 1;
        3:   58:            else if (day == 28) {
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        3:   59:                if (isLeapYear)
branch  0 taken 67% (fallthrough)
branch  1 taken 33%
        2:   60:                    tomoDay = day + 1;
        -:   61:                else {
        1:   62:                    tomoDay = 1;
        1:   63:                    tomoMonth = 3;
        -:   64:                }
        -:   65:            }
        -:   66:            else {
    #####:   67:                if (isLeapYear) {
branch  0 never executed
branch  1 never executed
    #####:   68:                    tomoDay = 1;
    #####:   69:                    tomoMonth = 3;
        -:   70:                }
    #####:   71:                else return "Invalid input";
        3:   72:            } break;
        -:   73:    }
        -:   74:
        -:   75:    static char output[30];
        6:   76:    sprintf(output, "%d/%d/%d", tomoYear, tomoMonth, tomoDay);
        6:   77:    return output;
        -:   78:}
        -:   79:
        -:   80:
function _Z10Commissioniii called 12 returned 100% blocks executed 63%
       12:   81:const char* Commission(int locks, int stocks, int barrels) {
       12:   82:    int lockPrice = 45;
       12:   83:    int stockPrice = 35;
       12:   84:    int barrelPrice = 25;
        -:   85:    int commission;
        -:   86:    int sales;
        -:   87:    static char output[10];
       12:   88:    if (locks < 0 || locks > 70) return "Invalid input";
branch  0 taken 75% (fallthrough)
branch  1 taken 25%
branch  2 taken 33% (fallthrough)
branch  3 taken 67%
        6:   89:    if (stocks < 0 || stocks > 80) return "Invalid input";
branch  0 taken 67% (fallthrough)
branch  1 taken 33%
branch  2 taken 50% (fallthrough)
branch  3 taken 50%
        2:   90:    if (barrels < 0 || barrels > 90) return "Invalid input";
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
    #####:   91:    sales = locks * lockPrice + stocks * stockPrice + barrels * barrelPrice;
    #####:   92:    if (sales > 1800) {
branch  0 never executed
branch  1 never executed
    #####:   93:        commission = 0.1 * 1000;
    #####:   94:        commission = commission + 0.15 * 1800;
    #####:   95:        commission = commission + 0.2 * (sales - 1800);
        -:   96:    }
    #####:   97:    else if (sales > 1000) {
branch  0 never executed
branch  1 never executed
    #####:   98:        commission = 0.1 * 1000;
    #####:   99:        commission = commission + 0.15 * (sales - 1000);
        -:  100:    }
        -:  101:    else 
    #####:  102:        commission = 0.1 * sales;
    #####:  103:    sprintf(output, "%d", commission);
    #####:  104:    return output;
        -:  105:}
        -:  106:
